name: workflow-test

# Allows you to run this workflow manually from the Actions tab
on: workflow_dispatch

# Ensure we only have one instance of this workflow running at a time
concurrency: ${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        id: tf-init
        working-directory: ./terraform
        run: |
          terraform init \
          -backend-config="resource_group_name=$TF_STATE_AZURERM_RESOURCE_GROUP_NAME" \
          -backend-config="storage_account_name=$TF_STATE_AZURERM_STORAGE_ACCOUNT_NAME" \
          -backend-config="container_name=$TF_STATE_AZURERM_STORAGE_CONTAINER_NAME" \
          -backend-config="key=$TF_STATE_AZURERM_KEY_NAME"
        env:
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_STATE_AZURERM_RESOURCE_GROUP_NAME: ${{ secrets.TF_STATE_AZURERM_RESOURCE_GROUP_NAME }}
          TF_STATE_AZURERM_STORAGE_ACCOUNT_NAME: ${{ secrets.TF_STATE_AZURERM_STORAGE_ACCOUNT_NAME }}
          TF_STATE_AZURERM_STORAGE_CONTAINER_NAME: ${{ secrets.TF_STATE_AZURERM_STORAGE_CONTAINER_NAME }}
          TF_STATE_AZURERM_KEY_NAME: ${{ secrets.TF_STATE_AZURERM_KEY_NAME }}

      - name: Terraform Plan
        id: tf-plan
        working-directory: ./terraform
        run: terraform plan -no-color
        env:
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
